@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model SocialMediaWeb.Models.Signup
<link href="~/Content/CustomCSS/Signup.css" rel="stylesheet" />


@using (Html.BeginForm("Signup", "Authentication", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
  
    <div class="form-grid">
        <div class="grid-item heading">  <h2>Signup</h2></div>
        <div class="grid-item">
            @Html.LabelFor(model => model.FirstName, new { @class = "form-label", id = "FirstNameLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-input", id = "FirstName" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "error" })
        </div>

        <div class="grid-item">
            @Html.LabelFor(model => model.LastName, new { @class = "form-label", id = "LastNameLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-input", id = "LastName" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "error" })
        </div>



        <div class="grid-item">
            @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label", id = "DateOfBirthLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-input", id = "DateOfBirth", type = "date" })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "error" })
        </div>

        <div class="grid-item">
            @Html.LabelFor(model => model.Gender, new { @class = "form-label", id = "GenderLabel" })
        </div>
        <div class="grid-item">
            <div>
                @Html.RadioButtonFor(model => model.Gender, "M", new { id = "GenderM" }) <label for="GenderM">Male</label>
                @Html.RadioButtonFor(model => model.Gender, "F", new { id = "GenderF" }) <label for="GenderF">Female</label>
                @Html.RadioButtonFor(model => model.Gender, "O", new { id = "GenderO" }) <label for="GenderO">Other</label>
            </div>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "error" })
        </div>

        <div class="grid-item">
            @Html.LabelFor(model => model.Address, new { @class = "form-label", id = "AddressLabel" })
        </div>
        <div class="grid-item">
            @Html.TextAreaFor(model => model.Address, new { @class = "form-input", id = "Address" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "error" })
        </div>

        <div class="grid-item">
            @Html.Label("State", new { @class = "form-label", id = "StateLabel" })
        </div>
        <div class="grid-item">
            @Html.DropDownList("StateID", (IEnumerable<SelectListItem>)ViewBag.States, "Select State", new { @class = "form-input", id = "StateDropdown" })
        </div>

        <div class="grid-item">
            @Html.Label("District", new { @class = "form-label", id = "DistrictLabel" })
        </div>
        <div class="grid-item">
            @Html.DropDownList("DistrictID", new List<SelectListItem>(), "Select District", new { @class = "form-input", id = "DistrictDropdown" })
        </div>

        <div class="grid-item">
            @Html.LabelFor(model => model.ProfilePicture, new { @class = "form-label", id = "ProfilePictureLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.ProfilePicture, new { type = "file", @class = "form-input", id = "ProfilePicture" })
            @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "error" })
        </div>
        <div class="grid-item">
            @Html.LabelFor(model => model.Email, new { @class = "form-label", id = "EmailLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-input", id = "Email" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error" })
        </div>

        <div class="grid-item">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "form-label", id = "PhoneNumberLabel" })
        </div>
        <div class="grid-item">
            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-input", id = "PhoneNumber" })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "error" })
        </div>



        <div class="grid-item">
            @Html.LabelFor(model => model.UserPassword, new { @class = "form-label", id = "UserPasswordLabel" })
        </div>
        <div class="grid-item">
            @Html.PasswordFor(model => model.UserPassword, new { @class = "form-input", id = "UserPassword" })
            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "error" })
        </div>


        <div class="grid-item">
            <label class="form-label">Confirm password </label>
        </div>
        <div class="grid-item">
            <input type="password" class="form-input" id="confirm-password" />
        </div>

        <div class="grid-item button">
            <input type="submit" value="Signup" class="submit-button" />
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/CustomScript/Signup.js"></script>
}
