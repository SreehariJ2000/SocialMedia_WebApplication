@model SocialMediaWeb.Models.SignupViewModel

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<h2>EditProfile</h2>

@using (Html.BeginForm("EditProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Gender, "M", new { @id = "Male" }) Male
                </div>
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Gender, "F", new { @id = "Female" }) Female
                </div>
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Gender, "O", new { @id = "Other" }) Other
                </div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("State")
            @Html.DropDownList("StateID", (IEnumerable<SelectListItem>)ViewBag.States, "Select State", new { @class = "form-control", id = "StateDropdown" })
        </div>

        <div class="form-group">
            @Html.Label("District")
            @Html.DropDownList("DistrictID", new List<SelectListItem>(), "Select District", new { @class = "form-control", id = "DistrictDropdown" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture)
            <input type="file" name="ProfilePicture" class="form-control" />
            @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#StateDropdown').change(function () {
                var stateId = $(this).val();
                if (stateId) {
                    $.ajax({
                        url: '@Url.Action("GetCities", "Authentication")',
                        data: { stateId: stateId },
                        success: function (data) {
                            var districtDropdown = $('#DistrictDropdown');
                            districtDropdown.empty();
                            districtDropdown.append('<option value="">Select District</option>');
                            $.each(data, function (index, item) {
                                districtDropdown.append('<option value="' + item.Value + '">' + item.Text + '</option>');
                            });
                        }
                    });
                } else {
                    $('#DistrictDropdown').empty().append('<option value="">Select District</option>');
                }
            });
        });
    </script>
}

